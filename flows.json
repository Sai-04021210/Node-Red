[
    {
        "id": "water-level-controller-flow",
        "type": "tab",
        "label": "Water Level Controller",
        "disabled": false,
        "info": "A water level controller with dashboard visualization",
        "env": []
    },
    {
        "id": "simulation-flow",
        "type": "tab",
        "label": "Simulation",
        "disabled": false,
        "info": "Simulation of water tank and pump system",
        "env": []
    },
    {
        "id": "dashboard-config",
        "type": "ui_tab",
        "name": "Water Tank",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "main-dashboard-group",
        "type": "ui_group",
        "name": "Water Level",
        "tab": "dashboard-config",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "control-dashboard-group",
        "type": "ui_group",
        "name": "Pump Control",
        "tab": "dashboard-config",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "history-dashboard-group",
        "type": "ui_group",
        "name": "History",
        "tab": "dashboard-config",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "config-dashboard-group",
        "type": "ui_group",
        "name": "Configuration",
        "tab": "dashboard-config",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "status-dashboard-group",
        "type": "ui_group",
        "name": "System Status",
        "tab": "dashboard-config",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "water-level-simulator",
        "type": "function",
        "z": "simulation-flow",
        "name": "Water Level Simulator",
        "func": "// Initialize context variables if they don't exist\ncontext.tankLevel = context.tankLevel || 50; // Initial water level (0-100%)\ncontext.maxCapacity = context.maxCapacity || 1000; // Liters\ncontext.pumpStatus = context.pumpStatus || false; // Pump initially off\ncontext.inflowRate = context.inflowRate || 0; // Liters per minute\ncontext.outflowRate = context.outflowRate || 0; // Liters per minute\ncontext.leakRate = context.leakRate || 0.1; // Small constant leak\n\n// Get pump status from input if available\nif (msg.topic === 'pump') {\n    context.pumpStatus = msg.payload;\n}\n\n// Get inflow rate adjustment if available\nif (msg.topic === 'inflow') {\n    context.inflowRate = msg.payload;\n}\n\n// Calculate new water level based on pump status and flow rates\nconst pumpRate = context.pumpStatus ? 5 : 0; // Pump removes 5% per cycle when on\nconst naturalInflow = context.inflowRate; // Natural inflow rate\nconst totalOutflow = pumpRate + context.leakRate; // Total outflow rate\n\n// Update tank level\ncontext.tankLevel += naturalInflow - totalOutflow;\n\n// Ensure tank level stays within bounds (0-100%)\nif (context.tankLevel > 100) context.tankLevel = 100;\nif (context.tankLevel < 0) context.tankLevel = 0;\n\n// Calculate actual volume in liters\nconst volumeLiters = (context.tankLevel / 100) * context.maxCapacity;\n\n// Create output message\nconst output = {\n    payload: context.tankLevel,\n    topic: 'water_level',\n    volumeLiters: volumeLiters,\n    pumpStatus: context.pumpStatus,\n    inflowRate: context.inflowRate,\n    outflowRate: totalOutflow,\n    timestamp: new Date().getTime()\n};\n\nreturn output;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 120,
        "wires": [
            [
                "water-level-output"
            ]
        ]
    },
    {
        "id": "simulation-trigger",
        "type": "inject",
        "z": "simulation-flow",
        "name": "Simulation Tick",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "tick",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "water-level-simulator"
            ]
        ]
    },
    {
        "id": "water-level-output",
        "type": "link out",
        "z": "simulation-flow",
        "name": "Water Level Out",
        "links": [
            "water-level-input"
        ],
        "x": 535,
        "y": 120,
        "wires": []
    },
    {
        "id": "pump-control-input",
        "type": "link in",
        "z": "simulation-flow",
        "name": "Pump Control In",
        "links": [
            "pump-control-output"
        ],
        "x": 135,
        "y": 180,
        "wires": [
            [
                "water-level-simulator"
            ]
        ]
    },
    {
        "id": "random-inflow",
        "type": "random",
        "z": "simulation-flow",
        "name": "Random Inflow",
        "low": "0",
        "high": "3",
        "inte": "false",
        "property": "payload",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "inflow-processor"
            ]
        ]
    },
    {
        "id": "inflow-trigger",
        "type": "inject",
        "z": "simulation-flow",
        "name": "Every 10s",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "random-inflow"
            ]
        ]
    },
    {
        "id": "inflow-processor",
        "type": "function",
        "z": "simulation-flow",
        "name": "Process Inflow",
        "func": "msg.topic = 'inflow';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 240,
        "wires": [
            [
                "water-level-simulator"
            ]
        ]
    },
    {
        "id": "water-level-input",
        "type": "link in",
        "z": "water-level-controller-flow",
        "name": "Water Level In",
        "links": [
            "water-level-output"
        ],
        "x": 135,
        "y": 120,
        "wires": [
            [
                "water-level-gauge",
                "water-level-chart",
                "water-level-controller",
                "level-display",
                "tank-visualization"
            ]
        ]
    },
    {
        "id": "water-level-gauge",
        "type": "ui_gauge",
        "z": "water-level-controller-flow",
        "name": "Water Level Gauge",
        "group": "main-dashboard-group",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Water Level",
        "label": "%",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#e60000",
            "#e6e600",
            "#00b33c"
        ],
        "seg1": "20",
        "seg2": "80",
        "className": "",
        "x": 350,
        "y": 80,
        "wires": []
    },
    {
        "id": "water-level-chart",
        "type": "ui_chart",
        "z": "water-level-controller-flow",
        "name": "Water Level History",
        "group": "history-dashboard-group",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Water Level History",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "minute",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 350,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "water-level-controller",
        "type": "function",
        "z": "water-level-controller-flow",
        "name": "Water Level Controller",
        "func": "// Get configuration from context or use defaults\ncontext.highLevel = context.highLevel || 80;\ncontext.lowLevel = context.lowLevel || 20;\ncontext.autoMode = context.autoMode || false;\ncontext.manualPumpState = context.manualPumpState || false;\n\n// Update configuration if received\nif (msg.topic === 'config') {\n    if (msg.payload.highLevel !== undefined) {\n        context.highLevel = msg.payload.highLevel;\n    }\n    if (msg.payload.lowLevel !== undefined) {\n        context.lowLevel = msg.payload.lowLevel;\n    }\n    if (msg.payload.autoMode !== undefined) {\n        context.autoMode = msg.payload.autoMode;\n    }\n    // Return without further processing for config updates\n    return null;\n}\n\n// Handle manual pump control\nif (msg.topic === 'manual_pump') {\n    context.manualPumpState = msg.payload;\n    // Only apply if not in auto mode\n    if (!context.autoMode) {\n        return {\n            topic: 'pump',\n            payload: context.manualPumpState\n        };\n    }\n    return null;\n}\n\n// Process water level data\nif (msg.topic === 'water_level') {\n    const waterLevel = msg.payload;\n    let pumpState = false;\n    \n    // Determine pump state based on mode\n    if (context.autoMode) {\n        // Hysteresis control logic\n        if (waterLevel >= context.highLevel) {\n            pumpState = true; // Turn pump on when water level is high\n        } else if (waterLevel <= context.lowLevel) {\n            pumpState = false; // Turn pump off when water level is low\n        } else {\n            // Maintain previous state in the middle range\n            pumpState = context.previousPumpState || false;\n        }\n    } else {\n        // Manual mode - use the manual pump state\n        pumpState = context.manualPumpState;\n    }\n    \n    // Store the current pump state for next time\n    context.previousPumpState = pumpState;\n    \n    // Generate status message\n    const statusMsg = {\n        topic: 'status',\n        payload: {\n            waterLevel: waterLevel,\n            pumpState: pumpState,\n            mode: context.autoMode ? 'Automatic' : 'Manual',\n            highLevel: context.highLevel,\n            lowLevel: context.lowLevel,\n            status: determineStatus(waterLevel, context.lowLevel, context.highLevel)\n        }\n    };\n    \n    // Send pump control message\n    const pumpMsg = {\n        topic: 'pump',\n        payload: pumpState\n    };\n    \n    return [pumpMsg, statusMsg];\n}\n\n// Helper function to determine system status\nfunction determineStatus(level, low, high) {\n    if (level <= low) return 'Low';\n    if (level >= high) return 'High';\n    return 'Normal';\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 200,
        "wires": [
            [
                "pump-control-output",
                "pump-status-indicator"
            ],
            [
                "status-display"
            ]
        ]
    },
    {
        "id": "pump-control-output",
        "type": "link out",
        "z": "water-level-controller-flow",
        "name": "Pump Control Out",
        "links": [
            "pump-control-input"
        ],
        "x": 575,
        "y": 180,
        "wires": []
    },
    {
        "id": "manual-pump-switch",
        "type": "ui_switch",
        "z": "water-level-controller-flow",
        "name": "Manual Pump Control",
        "label": "Pump",
        "tooltip": "",
        "group": "control-dashboard-group",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "manual_pump",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "water-level-controller"
            ]
        ]
    },
    {
        "id": "auto-mode-switch",
        "type": "ui_switch",
        "z": "water-level-controller-flow",
        "name": "Auto Mode Switch",
        "label": "Auto Mode",
        "tooltip": "",
        "group": "control-dashboard-group",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "config",
        "topicType": "str",
        "style": "",
        "onvalue": "{\"autoMode\":true}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"autoMode\":false}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "water-level-controller"
            ]
        ]
    },
    {
        "id": "high-level-slider",
        "type": "ui_slider",
        "z": "water-level-controller-flow",
        "name": "High Level Threshold",
        "label": "High Level",
        "tooltip": "",
        "group": "config-dashboard-group",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "config",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 160,
        "y": 380,
        "wires": [
            [
                "high-level-formatter"
            ]
        ]
    },
    {
        "id": "low-level-slider",
        "type": "ui_slider",
        "z": "water-level-controller-flow",
        "name": "Low Level Threshold",
        "label": "Low Level",
        "tooltip": "",
        "group": "config-dashboard-group",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "config",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 160,
        "y": 440,
        "wires": [
            [
                "low-level-formatter"
            ]
        ]
    },
    {
        "id": "high-level-formatter",
        "type": "function",
        "z": "water-level-controller-flow",
        "name": "Format High Level",
        "func": "return {\n    topic: \"config\",\n    payload: {\n        highLevel: msg.payload\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 380,
        "wires": [
            [
                "water-level-controller"
            ]
        ]
    },
    {
        "id": "low-level-formatter",
        "type": "function",
        "z": "water-level-controller-flow",
        "name": "Format Low Level",
        "func": "return {\n    topic: \"config\",\n    payload: {\n        lowLevel: msg.payload\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 440,
        "wires": [
            [
                "water-level-controller"
            ]
        ]
    },
    {
        "id": "pump-status-indicator",
        "type": "ui_led",
        "z": "water-level-controller-flow",
        "order": 1,
        "group": "status-dashboard-group",
        "width": 0,
        "height": 0,
        "label": "Pump Status",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Pump Status",
        "x": 580,
        "y": 240,
        "wires": []
    },
    {
        "id": "status-display",
        "type": "ui_text",
        "z": "water-level-controller-flow",
        "group": "status-dashboard-group",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "System Status",
        "label": "System Status",
        "format": "{{msg.payload.status}} ({{msg.payload.mode}} Mode)",
        "layout": "row-spread",
        "className": "",
        "x": 580,
        "y": 300,
        "wires": []
    },
    {
        "id": "level-display",
        "type": "ui_text",
        "z": "water-level-controller-flow",
        "group": "main-dashboard-group",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Level Display",
        "label": "Current Level",
        "format": "{{msg.payload}}% ({{msg.volumeLiters | number:0}} L)",
        "layout": "row-spread",
        "className": "",
        "x": 340,
        "y": 20,
        "wires": []
    },
    {
        "id": "tank-visualization",
        "type": "ui_level",
        "z": "water-level-controller-flow",
        "group": "main-dashboard-group",
        "name": "Tank Visualization",
        "order": 3,
        "width": "6",
        "height": "5",
        "colorHi": "#ff0000",
        "colorWarn": "#ffff00",
        "colorNormal": "#00ff00",
        "colorOff": "#ffffff",
        "min": 0,
        "max": "100",
        "segWarn": "20",
        "segHigh": "80",
        "unit": "%",
        "layout": "sv",
        "channelA": "",
        "channelB": "",
        "decimals": 1,
        "animations": "liquid",
        "shape": 1,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#000000",
        "fontLabel": "default",
        "fontValue": "default",
        "fontSmall": "default",
        "colorFromTheme": false,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "x": 350,
        "y": 260,
        "wires": []
    },
    {
        "id": "ui_base",
        "type": "ui_base",
        "theme": "theme-light",
        "site": {
            "name": "Water Level Controller",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    }
]
